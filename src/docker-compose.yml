services:
  mysqldb:
    image: 'mysql:latest'
  postgresdb:
    image: 'postgres:alpine3.16'
  seriesdb:
    image: 'mcr.microsoft.com/mssql/server:2022-latest'
  commentdb:
    image: 'mongo'
  hangfiredb:
    image: 'mongo'
  identitydb:
    image: 'mcr.microsoft.com/mssql/server:2022-latest'
  rabbitmq:
    image: 'rabbitmq:3-management-alpine'
  portainer:
    image: 'portainer/portainer-ce'
  elasticsearch:
    image: 'docker.elastic.co/elasticsearch/elasticsearch:8.13.4'
  kibana:
    image: 'docker.elastic.co/kibana/kibana:8.13.4'
  redis:
    image: 'redis:alpine'
  apigw.ocelot:
    image: '${DOCKER_REGISTRY-}apigw-ocelot:${PLATFORM:-linux}-${TAG:-latest}'
    build:
      context: .
      dockerfile: ApiGateways/Ocelot.Gw/Dockerfile
  identity.api:
    image: '${DOCKER_REGISTRY-}identity-api:${PLATFORM:-linux}-${TAG:-latest}'
    build:
      context: .
      dockerfile: Services/Identity/Identity.Api/Dockerfile
  category.api:
    image: '${DOCKER_REGISTRY-}category-api:${PLATFORM:-linux}-${TAG:-latest}'
    build:
      context: .
      dockerfile: Services/Category/Category.Api/Dockerfile
  post.api:
    image: '${DOCKER_REGISTRY-}post-api:${PLATFORM:-linux}-${TAG:-latest}'
    build:
      context: .
      dockerfile: Services/Post/Post.Api/Dockerfile
  series.api:
    image: '${DOCKER_REGISTRY-}series-api:${PLATFORM:-linux}-${TAG:-latest}'
    build:
      context: .
      dockerfile: Services/Series/Series.Api/Dockerfile
  post-in-series.api:
    image: '${DOCKER_REGISTRY-}post-in-series-api:${PLATFORM:-linux}-${TAG:-latest}'
    build:
      context: .
      dockerfile: Services/PostInSeries/PostInSeries.Api/Dockerfile
  tag.api:
    image: '${DOCKER_REGISTRY-}tag-api:${PLATFORM:-linux}-${TAG:-latest}'
    build:
      context: .
      dockerfile: Services/Tag/Tag.Api/Dockerfile
  post-in-tag.api:
    image: '${DOCKER_REGISTRY-}post-in-tag-api:${PLATFORM:-linux}-${TAG:-latest}'
    build:
      context: .
      dockerfile: Services/PostInTag/PostInTag.Api/Dockerfile
  comment.api:
    image: '${DOCKER_REGISTRY-}comment-api:${PLATFORM:-linux}-${TAG:-latest}'
    build:
      context: .
      dockerfile: Services/Comment/Comment.Api/Dockerfile
  hangfire.api:
    image: '${DOCKER_REGISTRY-}hangfire-api:${PLATFORM:-linux}-${TAG:-latest}'
    build:
      context: .
      dockerfile: Services/BackgroundJobs/Hangfire.Api/Dockerfile
  media.api:
    image: '${DOCKER_REGISTRY-}media-api:${PLATFORM:-linux}-${TAG:-latest}'
    build:
      context: .
      dockerfile: Services/Media/Media.Api/Dockerfile
  identity.grpc:
    image: '${DOCKER_REGISTRY-}identity-grpc:${PLATFORM:-linux}-${TAG:-latest}'
    build:
      context: .
      dockerfile: Services/Identity/Identity.Grpc/Dockerfile
  category.grpc:
    image: '${DOCKER_REGISTRY-}category-grpc:${PLATFORM:-linux}-${TAG:-latest}'
    build:
      context: .
      dockerfile: Services/Category/Category.Grpc/Dockerfile
  post.grpc:
    image: '${DOCKER_REGISTRY-}post-grpc:${PLATFORM:-linux}-${TAG:-latest}'
    build:
      context: .
      dockerfile: Services/Post/Post.Grpc/Dockerfile
  series.grpc:
    image: '${DOCKER_REGISTRY-}series-grpc:${PLATFORM:-linux}-${TAG:-latest}'
    build:
      context: .
      dockerfile: Services/Series/Series.Grpc/Dockerfile
  post-in-series.grpc:
    image: '${DOCKER_REGISTRY-}post-in-series-grpc:${PLATFORM:-linux}-${TAG:-latest}'
    build:
      context: .
      dockerfile: Services/PostInSeries/PostInSeries.Grpc/Dockerfile
  tag.grpc:
    image: '${DOCKER_REGISTRY-}tag-grpc:${PLATFORM:-linux}-${TAG:-latest}'
    build:
      context: .
      dockerfile: Services/Tag/Tag.Grpc/Dockerfile
  post-in-tag.grpc:
    image: '${DOCKER_REGISTRY-}post-in-tag-grpc:${PLATFORM:-linux}-${TAG:-latest}'
    build:
      context: .
      dockerfile: Services/PostInTag/PostInTag.Grpc/Dockerfile
  healthcheck:
    image: '${DOCKER_REGISTRY-}healthcheck:${PLATFORM:-linux}-${TAG:-latest}'
    build:
      context: .
      dockerfile: WebApps/HealthCheck/WebApps.HealthCheck/Dockerfile
  ui:
    image: '${DOCKER_REGISTRY-}ui:${PLATFORM:-linux}-${TAG:-latest}'
    build:
      context: .
      dockerfile: WebApps/UI/WebApps.UI/Dockerfile
networks:
  default:
    name: coding_hub_microservices
    driver: bridge
volumes:
  mysql_data:
    name: mysql_data
  postgres_data:
    name: postgres_data
  series_sqlserver_data:
    name: series_sqlserver_data
  rabbitmq_data:
    name: rabbitmq_data
  portainer_data:
    name: portainer_data
  elasticsearch_data:
    name: elasticsearch_data
  hangfire_mongo_data:
    name: hangfire_mongo_data
  identity_sqlserver_data:
    name: identity_sqlserver_data
  comment_mongo_data:
    name: comment_mongo_data