#services
services:
  ##database section
  categorydb:
    image: mysql:latest
  
  postdb:
    image: postgres:alpine3.16
  
  seriesdb:
    image: mcr.microsoft.com/mssql/server:2022-latest
    
  postinseriesdb:
    image: redis:alpine
    
  hangfiredb:
    image: mongo
    
  identitydb:
    image: mcr.microsoft.com/mssql/server:2022-latest
  
  ##infrastructure section
  rabbitmq:
    image: rabbitmq:3-management-alpine
  
  portainer:
    image: portainer/portainer-ce
  
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.13.4

  kibana:
    image: docker.elastic.co/kibana/kibana:8.13.4
  
  ##microservices api section
  category.api:
    image: ${DOCKER_REGISTRY-}category-api:${PLATFORM:-linux}-${TAG:-latest}
    build:
      context: .
      dockerfile: Services/Category/Category.Api/Dockerfile
  
  category.grpc:
    image: ${DOCKER_REGISTRY-}category-grpc:${PLATFORM:-linux}-${TAG:-latest}
    build:
      context: .
      dockerfile: Services/Category/Category.Grpc/Dockerfile
  
  post.api:
    image: ${DOCKER_REGISTRY-}post-api:${PLATFORM:-linux}-${TAG:-latest}
    build:
      context: .
      dockerfile: Services/Post/Post.Api/Dockerfile
  
  post.grpc:
    image: ${DOCKER_REGISTRY-}post-grpc:${PLATFORM:-linux}-${TAG:-latest}
    build:
      context: .
      dockerfile: Services/Post/Post.Grpc/Dockerfile
  
  series.api:
    image: ${DOCKER_REGISTRY-}series-api:${PLATFORM:-linux}-${TAG:-latest}
    build:
      context: .
      dockerfile: Services/Series/Series.Api/Dockerfile
      
  series.grpc:
    image: ${DOCKER_REGISTRY-}series-grpc:${PLATFORM:-linux}-${TAG:-latest}
    build:
      context: .
      dockerfile: Services/Series/Series.Grpc/Dockerfile
      
  postinseries.api:
    image: ${DOCKER_REGISTRY-}postinseries-api:${PLATFORM:-linux}-${TAG:-latest}
    build:
      context: .
      dockerfile: Services/PostInSeries/PostInSeries.Api/Dockerfile
      
  hangfire.api:
    image: ${DOCKER_REGISTRY-}hangfire-api:${PLATFORM:-linux}-${TAG:-latest}
    build:
      context: .
      dockerfile: Services/BackgroundJobs/Hangfire.Api/Dockerfile
      
  apigw.ocelot:
    image: ${DOCKER_REGISTRY-}apigw-ocelot:${PLATFORM:-linux}-${TAG:-latest}
    build:
      context: .
      dockerfile: ApiGateways/Ocelot.Gw/Dockerfile
  
  healthcheck:
    image: ${DOCKER_REGISTRY-}healthcheck:${PLATFORM:-linux}-${TAG:-latest}
    build:
      context: .
      dockerfile: WebApps/HealthCheck/WebApps.HealthCheck/Dockerfile

#network
networks:
  default:
    name: coding_hub_microservices
    driver: bridge

#volumes
volumes:
  mysql_data:
    name: mysql_data
  postgres_data:
    name: postgres_data
  sqlserver_data:
    name: sqlserver_data
  rabbitmq_data:
    name: rabbitmq_data
  portainer_data:
    name: portainer_data
  elasticsearch_data:
    name: elasticsearch_data
  hangfire_mongo_data:
    name: hangfire_mongo_data
  identity_sqlserver_data:
    name: identity_sqlserver_data