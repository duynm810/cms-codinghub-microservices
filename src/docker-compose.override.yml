services:
  mysqldb:
    container_name: mysqldb
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    volumes:
      - 'mysql_data:/var/lib/mysql'
      - './mysql_db_init.sql:/docker-entrypoint-initdb.d/mysql_db_init.sql'
    ports:
      - '3307:3306'
    restart: always
  postgresdb:
    container_name: postgresdb
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - 'postgres_data:/var/lib/postgresql/data'
      - './postgres_db_init.sh:/docker-entrypoint-initdb.d/postgres_db_init.sh'
    ports:
      - '5433:5432'
    restart: always
  seriesdb:
    container_name: seriesdb
    environment:
      SA_PASSWORD: ${MSSQL_SA_PASSWORD}
      ACCEPT_EULA: 'Y'
    volumes:
      - 'series_sqlserver_data:/var/opt/mssql'
    ports:
      - '1435:1433'
    restart: always
  commentdb:
    container_name: commentdb
    ports:
      - '27019:27017'
    volumes:
      - 'comment_mongo_data:/data/db'
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin
  hangfiredb:
    container_name: hangfiredb
    ports:
      - '27018:27017'
    volumes:
      - 'hangfire_mongo_data:/data/db'
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin
  identitydb:
    container_name: identitydb
    environment:
      SA_PASSWORD: ${MSSQL_SA_PASSWORD}
      ACCEPT_EULA: 'Y'
    volumes:
      - 'identity_sqlserver_data:/var/opt/mssql'
    restart: always
    ports:
      - '1436:1433'
  rabbitmq:
    container_name: rabbitmq
    restart: always
    ports:
      - '5672:5672'
      - '15672:15672'
    volumes:
      - 'rabbitmq_data:/var/lib/rabbitmq'
    hostname: rabbitmq
  portainer:
    container_name: portainer
    restart: always
    ports:
      - '8082:8000'
      - '9002:9000'
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock'
      - 'portainer_data:/data'
  elasticsearch:
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - node.name=es01
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    ports:
      - '9200:9200'
    volumes:
      - 'elasticsearch_data:/usr/share/elasticsearch/data'
  redis:
    container_name: redis
    restart: always
    ports:
      - '6379:6379'
  kibana:
    container_name: kibana
    environment:
      - 'ELASTICSEARCH_URL=http://elasticsearch:9200'
      - ELASTICSEARCH_SERVICE_TOKEN=AAEAAWVsYXN0aWMva2liYW5hL2tpYmFuYV90b2tlbjpXZFF0Wm5tM1JyQ1hoYUNRb1ZTdXlB
    depends_on:
      - elasticsearch
    ports:
      - '5601:5601'
  apigw.ocelot:
    container_name: apigw.ocelot
    environment:
      - ASPNETCORE_ENVIRONMENT=Local
      - ASPNETCORE_Kestrel__Certificates__Default__Password=password!
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetapp.pfx
      - 'ASPNETCORE_URLS=http://+:80;https://+:443'
      - 'ApiConfigurations__ApiName=coding_hub_microservices_api'
      - 'ApiConfigurations__ApiVersion=v1'
      - 'ApiConfigurations__ApiBaseUrl=http://apigw.ocelot'
      - 'ApiConfigurations__IdentityBaseUrl=http://localhost:6002'
      - 'ApiConfigurations__IssuerUri=http://identity.api'
      - 'ElasticConfigurations__Uri=http://elasticsearch:9200'
      - 'ElasticConfigurations__Username=elastic'
      - 'ElasticConfigurations__Password=admin'
    volumes:
      - ~/.aspnet/https:/https:ro
    depends_on:
      - category.api
      - tag.api
      - series.api
      - post.api
      - post-in-tag.api
      - post-in-series.api
      - comment.api
      - media.api
      - identity.api
    ports:
      - '6001:80'
      - '7001:443'
    restart: always
  identity.api:
    container_name: identity.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Local
      - ASPNETCORE_Kestrel__Certificates__Default__Password=password!
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetapp.pfx
      - 'ASPNETCORE_URLS=http://+:80;https://+:443'
      - 'DatabaseSettings__DbProvider=sqlserver'
      - 'DatabaseSettings__ConnectionString=Data Source=identitydb;Initial Catalog=identity_service_db;User Id=${MSSQL_SA_USER};Password=${MSSQL_SA_PASSWORD};TrustServerCertificate=True;Connect Timeout=30000;'
      - 'IdentityServer__BaseUrl=http://localhost:6002'
      - 'IdentityServer__IssuerUri=http://localhost:6002'
      - 'ElasticConfigurations__Uri=http://elasticsearch:9200'
      - 'ElasticConfigurations__Username=elastic'
      - 'ElasticConfigurations__Password=admin'
    volumes:
      - ~/.aspnet/https:/https:ro
    depends_on:
      - identitydb
    ports:
      - '6002:80'
      - '7002:443'
    restart: always
  category.api:
    container_name: category.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Local
      - 'ASPNETCORE_URLS=http://+:80'
      - 'DatabaseSettings__DbProvider=mysql'
      - 'DatabaseSettings__ConnectionString=Server=mysqldb;Database=category_service_db;Uid=${MYSQL_ROOT_USER};Pwd=${MYSQL_ROOT_PASSWORD};'
      - 'CacheSettings__ConnectionString=redis:6379'
      - 'GrpcSettings__PostUrl=http://post.grpc:6103'
      - 'ApiConfigurations__ApiTitle=Category Api'
      - 'ApiConfigurations__ApiName=coding_hub_microservices_api'
      - 'ApiConfigurations__ApiVersion=v1'
      - 'ApiConfigurations__ApiBaseUrl=http://category.api'
      - 'ApiConfigurations__IdentityBaseUrl=http://localhost:6002'
      - 'ApiConfigurations__IssuerUri=http://identity.api'
      - 'ElasticConfigurations__Uri=http://elasticsearch:9200'
      - 'ElasticConfigurations__Username=elastic'
      - 'ElasticConfigurations__Password=admin'
    depends_on:
      - mysqldb
    ports:
      - '6003:80'
    restart: always
  post.api:
    container_name: post.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Local
      - 'ASPNETCORE_URLS=http://+:80'
      - 'DatabaseSettings__DbProvider=postgresql'
      - 'DatabaseSettings__ConnectionString=Server=postgresdb;Database=post_service_db;User Id=${POSTGRES_USER};Password=${POSTGRES_PASSWORD};'
      - 'CacheSettings__ConnectionString=redis:6379'
      - 'GrpcSettings__IdentityUrl=http://identity.grpc:6101'
      - 'GrpcSettings__CategoryUrl=http://category.grpc:6102'
      - 'GrpcSettings__SeriesUrl=http://series.grpc:6104'
      - 'GrpcSettings__PostInSeriesUrl=http://post-in-series.grpc:6105'
      - 'GrpcSettings__TagUrl=http://tag.grpc:6106'
      - 'GrpcSettings__PostInTagUrl=http://post-in-tag.grpc:6107'
      - 'ApiConfigurations__ApiTitle=Post Api'
      - 'ApiConfigurations__ApiName=coding_hub_microservices_api'
      - 'ApiConfigurations__ApiVersion=v1'
      - 'ApiConfigurations__ApiBaseUrl=http://post.api'
      - 'ApiConfigurations__IdentityBaseUrl=http://localhost:6002'
      - 'ApiConfigurations__IssuerUri=http://identity.api'
      - 'ElasticConfigurations__Uri=http://elasticsearch:9200'
      - 'ElasticConfigurations__Username=elastic'
      - 'ElasticConfigurations__Password=admin'
      - 'EventBusSettings__HostAddress=amqp://guest:guest@rabbitmq:5672'
      - 'EventBusSettings__ServiceName=PostService'
      - 'EmailTemplateSettings__TemplateDirectory=Templates'
    depends_on:
      - postgresdb
      - rabbitmq
    ports:
      - '6004:80'
    restart: always
  series.api:
    container_name: series.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Local
      - 'ASPNETCORE_URLS=http://+:80'
      - 'DatabaseSettings__DbProvider=sqlserver'
      - 'DatabaseSettings__ConnectionString=Data Source=seriesdb;Initial Catalog=series_service_db;User Id=${MSSQL_SA_USER};Password=${MSSQL_SA_PASSWORD};Multipleactiveresultsets=true;TrustServerCertificate=true;Connection Timeout=30000;'
      - 'CacheSettings__ConnectionString=redis:6379'
      - 'ApiConfigurations__ApiTitle=Series Api'
      - 'ApiConfigurations__ApiName=coding_hub_microservices_api'
      - 'ApiConfigurations__ApiVersion=v1'
      - 'ApiConfigurations__ApiBaseUrl=http://series.api'
      - 'ApiConfigurations__IdentityBaseUrl=http://localhost:6002'
      - 'ApiConfigurations__IssuerUri=http://identity.api'
      - 'ElasticConfigurations__Uri=http://elasticsearch:9200'
      - 'ElasticConfigurations__Username=elastic'
      - 'ElasticConfigurations__Password=admin'
    depends_on:
      - seriesdb
    ports:
      - '6005:80'
    restart: always
  post-in-series.api:
    container_name: post-in-series.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Local
      - 'ASPNETCORE_URLS=http://+:80'
      - 'DatabaseSettings__DbProvider=postgresql'
      - 'DatabaseSettings__ConnectionString=Server=postgresdb;Database=post_in_series_service_db;User Id=${POSTGRES_USER};Password=${POSTGRES_PASSWORD};'
      - 'CacheSettings__ConnectionString=redis:6379'
      - 'GrpcSettings__CategoryUrl=http://category.grpc:6102'
      - 'GrpcSettings__PostUrl=http://post.grpc:6103'
      - 'GrpcSettings__SeriesUrl=http://series.grpc:6104'
      - 'ApiConfigurations__ApiTitle=Post In Series API'
      - 'ApiConfigurations__ApiName=coding_hub_microservices_api'
      - 'ApiConfigurations__ApiVersion=v1'
      - 'ApiConfigurations__ApiBaseUrl=http://post-in-series.api'
      - 'ApiConfigurations__IdentityBaseUrl=http://localhost:6002'
      - 'ApiConfigurations__IssuerUri=http://identity.api'
      - 'ElasticConfigurations__Uri=http://elasticsearch:9200'
      - 'ElasticConfigurations__Username=elastic'
      - 'ElasticConfigurations__Password=admin'
      - 'EventBusSettings__HostAddress=amqp://guest:guest@rabbitmq:5672'
      - 'EventBusSettings__ServiceName=PostInSeriesService'
    depends_on:
      - postgresdb
    ports:
      - '6006:80'
    restart: always
  tag.api:
    container_name: tag.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Local
      - 'ASPNETCORE_URLS=http://+:80'
      - 'DatabaseSettings__DbProvider=mysql'
      - 'DatabaseSettings__ConnectionString=Server=mysqldb;Database=tag_service_db;Uid=${MYSQL_ROOT_USER};Pwd=${MYSQL_ROOT_PASSWORD};'
      - 'CacheSettings__ConnectionString=redis:6379'
      - 'GrpcSettings__PostInTagUrl=http://post-in-tag.grpc:6107'
      - 'ApiConfigurations__ApiTitle=Tag Api'
      - 'ApiConfigurations__ApiName=coding_hub_microservices_api'
      - 'ApiConfigurations__ApiVersion=v1'
      - 'ApiConfigurations__ApiBaseUrl=http://tag.api'
      - 'ApiConfigurations__IdentityBaseUrl=http://localhost:6002'
      - 'ApiConfigurations__IssuerUri=http://identity.api'
      - 'ElasticConfigurations__Uri=http://elasticsearch:9200'
      - 'ElasticConfigurations__Username=elastic'
      - 'ElasticConfigurations__Password=admin'
      - 'EventBusSettings__HostAddress=amqp://guest:guest@rabbitmq:5672'
      - 'EventBusSettings__ServiceName=TagService'
    depends_on:
      - mysqldb
    ports:
      - '6007:80'
    restart: always
  post-in-tag.api:
    container_name: post-in-tag.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Local
      - 'ASPNETCORE_URLS=http://+:80'
      - 'DatabaseSettings__DbProvider=postgresql'
      - 'DatabaseSettings__ConnectionString=Server=postgresdb;Database=post_in_tag_service_db;User Id=${POSTGRES_USER};Password=${POSTGRES_PASSWORD};'
      - 'CacheSettings__ConnectionString=redis:6379'
      - 'GrpcSettings__CategoryUrl=http://category.grpc:6102'
      - 'GrpcSettings__PostUrl=http://post.grpc:6103'
      - 'GrpcSettings__TagUrl=http://tag.grpc:6106'
      - 'ApiConfigurations__ApiTitle=Post In Tag Api'
      - 'ApiConfigurations__ApiName=coding_hub_microservices_api'
      - 'ApiConfigurations__ApiVersion=v1'
      - 'ApiConfigurations__ApiBaseUrl=http://post-in-tag.api'
      - 'ApiConfigurations__IdentityBaseUrl=http://localhost:6002'
      - 'ApiConfigurations__IssuerUri=http://identity.api'
      - 'ElasticConfigurations__Uri=http://elasticsearch:9200'
      - 'ElasticConfigurations__Username=elastic'
      - 'ElasticConfigurations__Password=admin'
      - 'EventBusSettings__HostAddress=amqp://guest:guest@rabbitmq:5672'
      - 'EventBusSettings__ServiceName=PostInTagService'
    depends_on:
      - postgresdb
    ports:
      - '6008:80'
    restart: always
  comment.api:
    container_name: comment.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Local
      - 'ASPNETCORE_URLS=http://+:80'
      - 'MongoDbSettings__DbProvider=mongodb'
      - 'MongoDbSettings__ConnectionString=mongodb://admin:admin@commentdb'
      - 'MongoDbSettings__DatabaseName=comment_service_db'
      - 'CacheSettings__ConnectionString=redis:6379'
      - 'GrpcSettings__IdentityUrl=http://identity.grpc:6101'
      - 'GrpcSettings__PostUrl=http://post.grpc:6103'
      - 'ApiConfigurations__ApiTitle=Comment Api'
      - 'ApiConfigurations__ApiName=coding_hub_microservices_api'
      - 'ApiConfigurations__ApiVersion=v1'
      - 'ApiConfigurations__ApiBaseUrl=http://comment.api'
      - 'ApiConfigurations__IdentityBaseUrl=http://localhost:6002'
      - 'ApiConfigurations__IssuerUri=http://identity.api'
      - 'ElasticConfigurations__Uri=http://elasticsearch:9200'
      - 'ElasticConfigurations__Username=elastic'
      - 'ElasticConfigurations__Password=admin'
      - 'EventBusSettings__HostAddress=amqp://guest:guest@rabbitmq:5672'
      - 'EventBusSettings__ServiceName=CommentService'
    depends_on:
      - commentdb
    ports:
      - '6009:80'
    restart: always
  hangfire.api:
    container_name: hangfire.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Local
      - 'ASPNETCORE_URLS=http://+:80'
      - 'HangfireSettings__Route=/jobs'
      - 'HangfireSettings__ServerName=Hangfire Api'
      - 'HangfireSettings__Dashboard__AppPath=/'
      - 'HangfireSettings__Dashboard__StartsPollingInterval=2000'
      - 'HangfireSettings__Dashboard__DashboardTitle=Jobs'
      - 'HangfireSettings__Storage__DbProvider=mongodb'
      - 'HangfireSettings__Storage__ConnectionString=mongodb://admin:admin@hangfiredb/hangfire-webapi?authSource=admin'
      - 'SmtpEmailSettings__DisplayName=Coding-hub Microservice'
      - 'SmtpEmailSettings__EnableVerification=false'
      - 'SmtpEmailSettings__From=nguyenminhduy8101996@gmail.com'
      - 'SmtpEmailSettings__SmtpServer=smtp.gmail.com'
      - 'SmtpEmailSettings__UseSsl=true'
      - 'SmtpEmailSettings__Port=465'
      - 'SmtpEmailSettings__Username=nguyenminhduy8101996@gmail.com'
      - 'SmtpEmailSettings__Password=cmuaydptrmonoxvv'
      - 'ElasticConfigurations__Uri=http://elasticsearch:9200'
      - 'ElasticConfigurations__Username=elastic'
      - 'ElasticConfigurations__Password=admin'
      - 'EventBusSettings__HostAddress=amqp://guest:guest@rabbitmq:5672'
      - 'EventBusSettings__ServiceName=BackgroundJobs'
    depends_on:
      - hangfiredb
      - rabbitmq
    ports:
      - '6010:80'
    restart: always
  media.api:
    container_name: media.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Local
      - 'ASPNETCORE_URLS=http://+:80'
      - 'MediaSettings__AllowImageFileTypes=jpg,jpeg,png,gif'
      - 'MediaSettings__ImageFolder=media'
      - 'MediaSettings__NoImage=/images/no-image.png'
      - 'ApiConfigurations__ApiTitle=Media Api'
      - 'ApiConfigurations__ApiName=coding_hub_microservices_api'
      - 'ApiConfigurations__ApiVersion=v1'
      - 'ApiConfigurations__ApiBaseUrl=http://media.api'
      - 'ApiConfigurations__IdentityBaseUrl=http://localhost:6002'
      - 'ApiConfigurations__IssuerUri=http://identity.api'
      - 'ElasticConfigurations__Uri=http://elasticsearch:9200'
      - 'ElasticConfigurations__Username=elastic'
      - 'ElasticConfigurations__Password=admin'
    ports:
      - '6011:80'
    restart: always
    volumes:
      - './Services/Media/Media.Api/wwwroot:/app/wwwroot'
  identity.grpc:
    container_name: identity.grpc
    environment:
      - ASPNETCORE_ENVIRONMENT=Local
      - 'ASPNETCORE_URLS=http://+:80'
      - 'DatabaseSettings__DbProvider=sqlserver'
      - 'DatabaseSettings__ConnectionString=Data Source=identitydb;Initial Catalog=identity_service_db;User Id=${MSSQL_SA_USER};Password=${MSSQL_SA_PASSWORD};TrustServerCertificate=True;Connect Timeout=30000;'
      - 'ElasticConfigurations__Uri=http://elasticsearch:9200'
      - 'ElasticConfigurations__Username=elastic'
      - 'ElasticConfigurations__Password=admin'
    depends_on:
      - identitydb
    ports:
      - '6101:80'
    restart: always
  category.grpc:
    container_name: category.grpc
    environment:
      - ASPNETCORE_ENVIRONMENT=Local
      - 'ASPNETCORE_URLS=http://+:80'
      - 'DatabaseSettings__DbProvider=mysql'
      - 'DatabaseSettings__ConnectionString=Server=mysqldb;Database=category_service_db;Uid=${MYSQL_ROOT_USER};Pwd=${MYSQL_ROOT_PASSWORD};'
      - 'ElasticConfigurations__Uri=http://elasticsearch:9200'
      - 'ElasticConfigurations__Username=elastic'
      - 'ElasticConfigurations__Password=admin'
    depends_on:
      - mysqldb
    ports:
      - '6102:80'
    restart: always
  post.grpc:
    container_name: post.grpc
    environment:
      - ASPNETCORE_ENVIRONMENT=Local
      - 'ASPNETCORE_URLS=http://+:80'
      - 'DatabaseSettings__DbProvider=postgresql'
      - 'DatabaseSettings__ConnectionString=Server=postgresdb;Database=post_service_db;User Id=${POSTGRES_USER};Password=${POSTGRES_PASSWORD};'
      - 'ElasticConfigurations__Uri=http://elasticsearch:9200'
      - 'ElasticConfigurations__Username=elastic'
      - 'ElasticConfigurations__Password=admin'
    depends_on:
      - postgresdb
    ports:
      - '6013:80'
    restart: always
  series.grpc:
    container_name: series.grpc
    environment:
      - ASPNETCORE_ENVIRONMENT=Local
      - 'ASPNETCORE_URLS=http://+:80'
      - 'DatabaseSettings__DbProvider=sqlserver'
      - 'DatabaseSettings__ConnectionString=Data Source=seriesdb;Initial Catalog=series_service_db;User Id=${MSSQL_SA_USER};Password=${MSSQL_SA_PASSWORD};Multipleactiveresultsets=true;TrustServerCertificate=true;Connection Timeout=30;'
      - 'ElasticConfigurations__Uri=http://elasticsearch:9200'
      - 'ElasticConfigurations__Username=elastic'
      - 'ElasticConfigurations__Password=admin'
    depends_on:
      - seriesdb
    ports:
      - '6104:80'
    restart: always
  post-in-series.grpc:
    container_name: post-in-series.grpc
    environment:
      - ASPNETCORE_ENVIRONMENT=Local
      - 'ASPNETCORE_URLS=http://+:80'
      - 'DatabaseSettings__DbProvider=postgresql'
      - 'DatabaseSettings__ConnectionString=Server=postgresdb;Database=post_in_series_service_db;User Id=${POSTGRES_USER};Password=${POSTGRES_PASSWORD};'
      - 'ElasticConfigurations__Uri=http://elasticsearch:9200'
      - 'ElasticConfigurations__Username=elastic'
      - 'ElasticConfigurations__Password=admin'
    depends_on:
      - postgresdb
    ports:
      - '6105:80'
    restart: always
  tag.grpc:
    container_name: tag.grpc
    environment:
      - ASPNETCORE_ENVIRONMENT=Local
      - 'ASPNETCORE_URLS=http://+:80'
      - 'DatabaseSettings__DbProvider=mysql'
      - 'DatabaseSettings__ConnectionString=Server=mysqldb;Database=tag_service_db;Uid=${MYSQL_ROOT_USER};Pwd=${MYSQL_ROOT_PASSWORD};'
      - 'ElasticConfigurations__Uri=http://elasticsearch:9200'
      - 'ElasticConfigurations__Username=elastic'
      - 'ElasticConfigurations__Password=admin'
    depends_on:
      - mysqldb
    ports:
      - '6106:80'
    restart: always
  post-in-tag.grpc:
    container_name: post-in-tag.grpc
    environment:
      - ASPNETCORE_ENVIRONMENT=Local
      - 'ASPNETCORE_URLS=http://+:80'
      - 'DatabaseSettings__DbProvider=postgresql'
      - 'DatabaseSettings__ConnectionString=Server=postgresdb;Database=post_in_tag_service_db;User Id=${POSTGRES_USER};Password=${POSTGRES_PASSWORD};'
      - 'ElasticConfigurations__Uri=http://elasticsearch:9200'
      - 'ElasticConfigurations__Username=elastic'
      - 'ElasticConfigurations__Password=admin'
    depends_on:
      - postgresdb
    ports:
      - '6107:80'
    restart: always
  healthcheck:
    container_name: healthcheck
    environment:
      - ASPNETCORE_ENVIRONMENT=Local
      - 'ASPNETCORE_URLS=http://+:80'
      - 'HealthChecks-UI__HealthChecks__0__Name=Identity Api Health Check'
      - 'HealthChecks-UI__HealthChecks__0__Uri=http://identity.api/hc'
      - 'HealthChecks-UI__HealthChecks__1__Name=Category Api Health Check'
      - 'HealthChecks-UI__HealthChecks__1__Uri=http://category.api/hc'
      - 'HealthChecks-UI__HealthChecks__2__Name=Post Api Health Check'
      - 'HealthChecks-UI__HealthChecks__2__Uri=http://post.api/hc'
      - 'HealthChecks-UI__HealthChecks__3__Name=Series Api Health Check'
      - 'HealthChecks-UI__HealthChecks__3__Uri=http://series.api/hc'
      - 'HealthChecks-UI__HealthChecks__4__Name=Post In Series Api Health Check'
      - 'HealthChecks-UI__HealthChecks__4__Uri=http://post-in-series.api/hc'
      - 'HealthChecks-UI__HealthChecks__5__Name=Tag Api Health Check'
      - 'HealthChecks-UI__HealthChecks__5__Uri=http://tag.api/hc'
      - 'HealthChecks-UI__HealthChecks__6__Name=Post In Tag Api Health Check'
      - 'HealthChecks-UI__HealthChecks__6__Uri=http://post-in-tag.api/hc'
      - 'HealthChecks-UI__HealthChecks__7__Name=Comment Api Health Check'
      - 'HealthChecks-UI__HealthChecks__7__Uri=http://comment.api/hc'
      - 'HealthChecks-UI__HealthChecks__8__Name=Scheduled Job Health Check'
      - 'HealthChecks-UI__HealthChecks__8__Uri=http://hangfire.api/hc'
      - 'HealthChecks-UI__HealthChecks__9__Name=Identity Grpc Health Check'
      - 'HealthChecks-UI__HealthChecks__9__Uri=http://identity.grpc/hc'
      - 'HealthChecks-UI__HealthChecks__10__Name=Category Grpc Health Check'
      - 'HealthChecks-UI__HealthChecks__10__Uri=http://category.grpc/hc'
      - 'HealthChecks-UI__HealthChecks__11__Name=Post Grpc Health Check'
      - 'HealthChecks-UI__HealthChecks__11__Uri=http://post.grpc/hc'
      - 'HealthChecks-UI__HealthChecks__12__Name=Series Grpc Health Check'
      - 'HealthChecks-UI__HealthChecks__12__Uri=http://series.grpc/hc'
      - 'HealthChecks-UI__HealthChecks__13__Name=Post In Series Grpc Health Check'
      - 'HealthChecks-UI__HealthChecks__13__Uri=http://post-in-series.grpc/hc'
      - 'HealthChecks-UI__HealthChecks__14__Name=Tag Grpc Health Check'
      - 'HealthChecks-UI__HealthChecks__14__Uri=http://tag.grpc/hc'
      - 'HealthChecks-UI__HealthChecks__15__Name=Post In Tag Grpc Health Check'
      - 'HealthChecks-UI__HealthChecks__15__Uri=http://post-in-tag.grpc/hc'
      - 'HealthChecks-UI__HealthChecks__16__Name=Web UI Health Check'
      - 'HealthChecks-UI__HealthChecks__16__Uri=http://ui/hc'
      - 'HealthChecks-UI__EvaluationTimeOnSeconds=10'
      - 'HealthChecks-UI__MinimumSecondBetweenFailureNotifications=60'
      - 'ElasticConfigurations__Uri=http://elasticsearch:9200'
      - 'ElasticConfigurations__Username=elastic'
      - 'ElasticConfigurations__Password=admin'
    ports:
      - '6200:80'
  ui:
    container_name: ui
    environment:
      - ASPNETCORE_ENVIRONMENT=Local
      - ASPNETCORE_Kestrel__Certificates__Default__Password=password!
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetapp.pfx
      - 'ASPNETCORE_URLS=http://+:80;https://+:443'
      - 'ApiSettings__ServerUrl=http://apigw.ocelot'
      - 'IdentityServerSettings__AuthorityUrl=http://localhost:6002'
      - 'IdentityServerSettings__IssuerUri=http://identity.api'
      - 'IdentityServerSettings__ClientId=coding_hub_microservices_mvc'
      - 'IdentityServerSettings__ClientSecret=mvc-client-secret'
      - 'ElasticConfigurations__Uri=http://elasticsearch:9200'
      - 'ElasticConfigurations__Username=elastic'
      - 'ElasticConfigurations__Password=admin'
    volumes:
      - ~/.aspnet/https:/https:ro
    ports:
      - '6300:80'
      - '7300:443'
    restart: on-failure