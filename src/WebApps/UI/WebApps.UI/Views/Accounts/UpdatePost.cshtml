@model UpdatePostViewModel
@{
    ViewData["ShowBottom"] = false;
    ViewData["MainClass"] = "bg-grey pb-30"; // Set custom class for main in Layout
    var post = Model.Post;
    var categories = Model.Categories;
}

@section Scripts
{
    <script type="text/javascript">
        const serverUrl = '@ViewData["ServerUrl"]';
    </script>

    <script src="~/js/controllers/accounts.controller.js" asp-append-version="true"></script>
    <script src="~/lib/quill/quill-image-drop-and-paste.js" asp-append-version="true"></script>
    <script src="~/lib/quill/quill-config.js" asp-append-version="true"></script>
    <script src="~/lib/tagify/tagify-config.js" asp-append-version="true"></script>

    <script>
        // Initialize the accountsController
        const controller = new accountsController('frm-update-post');
        controller.initialize();
        controller.checkRequiredFields();

        document.addEventListener('DOMContentLoaded', function () {
            // Initializing with existing tags from the server
            const existingTagsElement = document.getElementById('tagsData');
            const existingTags = JSON.parse(existingTagsElement.getAttribute('data-tags'));
            window.loadExistingTags(existingTags);
        });

        const thumbnailUrl = document.getElementById("thumbnailUrl").value;

        // Display uploaded images when loading the update page (Hiển thị hình ảnh đã upload khi tải trang cập nhật)
        if (thumbnailUrl) {
            displayUploadedFile(thumbnailUrl);
        }

        function displayUploadedFile(url) {
            const fileList = document.getElementById("file-list");
            if (!fileList) return;

            fileList.innerHTML = '';

            const fileItem = document.createElement("div");
            fileItem.className = "file-item";

            const fileThumbnail = document.createElement("div");
            fileThumbnail.className = "file-thumbnail";
            const img = document.createElement("img");
            img.src = `${serverUrl}/${url}`; // Sử dụng serverUrl từ biến JavaScript
            img.alt = "Thumbnail";
            fileThumbnail.appendChild(img);

            const fileDetails = document.createElement("div");
            fileDetails.className = "file-details";
            fileDetails.innerHTML = `
                <span class="file-name">${url.split('/').pop()}</span>
            `;

            const fileRemove = document.createElement("div");
            fileRemove.className = "file-remove";
            const removeButton = document.createElement("button");
            removeButton.type = "button";
            removeButton.innerHTML = '<i class="fas fa-trash-alt"></i>';
            removeButton.addEventListener("click", () => {
                this.showConfirmAlert(
                    'Are you sure you want to delete this image?',
                    'This action cannot be undone.',
                    'Yes, delete it',
                    'Cancel',
                    async () => {
                        const thumbnailUrl = document.getElementById('thumbnailUrl').value;
                        if (thumbnailUrl) {
                            const deleteSuccess = await controller.deleteImage(thumbnailUrl);
                            if (deleteSuccess) {
                                const postId = document.getElementById('postId').value;
                                if (postId) {
                                    await updatePostThumbnail(postId);
                                }

                                fileList.value = '';
                                fileList.innerHTML = '';
                                document.getElementById('thumbnailUrl').value = ''; // Xóa URL hình ảnh khi xóa file
                            } else {
                                this.showErrorNotification('Failed to delete image.');
                            }
                        }
                    }
                );
            });

            fileRemove.appendChild(removeButton);
            fileItem.appendChild(fileThumbnail);
            fileItem.appendChild(fileDetails);
            fileItem.appendChild(fileRemove);
            fileList.appendChild(fileItem);
        }

        async function updatePostThumbnail(postId) {
            try {
                console.log(`Updating thumbnail for post with ID: ${postId}`);
                const response = await $.ajax({
                    url: `/accounts/update-thumbnail/${postId}`,
                    method: 'PUT',
                    contentType: 'application/json',
                    data: JSON.stringify({
                        thumbnail: null // Set the thumbnail to null
                    })
                });

                console.log('Post thumbnail updated successfully', response);
            } catch (error) {
                showErrorNotification(`Error updating post: ${error.responseText || error.message}`);
            }
        }

        async function submitUpdatePostForm() {
            const form = document.getElementById('frm-update-post');

            const content = quill.root.innerHTML;
            document.querySelector('input[name="Content"]').value = content;

            const tagsData = window.getTagsData();

            const formData = new FormData(form);

            const postId = document.getElementById('postId').value;
            const url = `/accounts/update-post/${postId}`;

            const data = {
                Title: formData.get('Title'),
                Slug: formData.get('Slug'),
                Content: content,
                Summary: formData.get('Summary'),
                Thumbnail: formData.get('Thumbnail'),
                SeoDescription: formData.get('SeoDescription'),
                Source: formData.get('Source'),
                CategoryId: formData.get('CategoryId'),
                RawTags: JSON.stringify(tagsData)
            };

            try {
                const response = await $.ajax({
                    url: url,
                    method: 'PUT',
                    contentType: 'application/json',
                    processData: false,
                    data: JSON.stringify(data)
                });

                if (response.success) {
                    window.location.href = response.redirectUrl;
                } else {
                    showErrorNotification('An error occurred while updating the post.');
                }
            } catch (error) {
                console.error('Error:', error);
                showErrorNotification('An error occurred while updating the post.');
            }
        }
        
    </script>
}

<div class="container single-content">
    <div class="entry-header entry-header-style-1 mb-50 pt-50 text-center">
        <h1 class="entry-title mb-20 font-weight-900">
            Update posts
        </h1>
        <div class="breadcrumb">
            <a asp-action="ManagePosts" asp-controller="Accounts" rel="nofollow">Manage posts</a>
            <span></span> Update posts
        </div>
    </div>
    <form enctype="multipart/form-data" id="frm-update-post" novalidate>
        @Html.AntiForgeryToken()
        <!-- Id -->
        <input type="hidden" name="PostId" id="postId" value="@post.Id"/>
        <!-- Category -->
        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    <label for="category">Category</label>
                    <select class="dropdown-custom" name="CategoryId" id="category" required>
                        <option value="" disabled>Select category</option>
                        @foreach (var category in categories)
                        {
                            if (post.CategoryId == category.Id)
                            {
                                <option value="@category.Id" selected>@category.Name</option>
                            }
                            else
                            {
                                <option value="@category.Id">@category.Name</option>
                            }
                        }
                    </select>
                </div>
            </div>
        </div>
        <!-- Title -->
        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    <label for="title">Title</label>
                    <input type="text" required class="form-control" name="Title" id="title" placeholder="Title" value="@post.Title">
                </div>
            </div>
            <!-- Slug -->
            <div class="col-md-6">
                <div class="form-group">
                    <label for="slug">Slug</label>
                    <input type="text" required class="form-control" name="Slug" id="slug" placeholder="Slug (SEO)" value="@post.Slug">
                </div>
            </div>
        </div>
        <!-- Summary -->
        <div class="row">
            <div class="col-md-12">
                <div class="form-group">
                    <label for="summary">Summary</label>
                    <textarea class="form-control" required name="Summary" id="summary" placeholder="Summary" rows="3">@post.Summary</textarea>
                </div>
            </div>
        </div>
        <!-- Content -->
        <div class="row">
            <div class="col-md-12">
                <div class="form-group">
                    <div id="editor" data-content='@Html.Raw(post.Content)'></div>
                    <input type="hidden" name="Content" id="content">
                </div>
            </div>
        </div>
        <!-- Seo Description -->
        <div class="row">
            <div class="col-md-12">
                <div class="form-group">
                    <label for="seoDescription">SEO Description</label>
                    <input class="form-control" name="SeoDescription" id="seoDescription" placeholder="SEO description" rows="3" value="@post.SeoDescription">
                </div>
            </div>
        </div>
        <!-- Source -->
        <div class="row">
            <div class="col-md-12">
                <div class="form-group">
                    <label for="source">Source</label>
                    <input type="text" class="form-control" name="Source" id="source" placeholder="Reference source (URL or source)" value="@post.Source">
                </div>
            </div>
        </div>
        <!-- Tags -->
        <div class="row">
            <div class="col-md-12">
                <div class="form-group">
                    <label for="tags">Tags</label>
                    <input type="text" class="form-control" id="tags" placeholder="Add tags">
                    <input type="hidden" name="RawTags" id="tagsData" data-tags='@Html.Raw(Json.Serialize(Model.Post.Tags))'>
                </div>
            </div>
        </div>
        <!-- Thumbnail -->
        <div class="row">
            <div class="col-md-12">
                <div id="upload-section" class="upload-container">
                    <label for="thumbnail" class="custom-file-upload" style="width: 100%;">
                        <input type="file" id="thumbnail" name="thumbnail" style="display:none;">
                        <div id="drop-area" class="drop-area">
                            <div class="drop-area-icon">
                                <i class="fas fa-cloud-upload-alt fa-2x mb-2"></i>
                            </div>
                            <div class="drop-area-text">Drag and drop file here</div>
                        </div>
                    </label>
                    <div id="file-list" class="file-list"></div>

                    <!-- Spinner -->
                    <div id="spinner" class="spinner">
                        <div class="rect1"></div>
                        <div class="rect2"></div>
                        <div class="rect3"></div>
                        <div class="rect4"></div>
                        <div class="rect5"></div>
                    </div>
                </div>
            </div>
        </div>
        <input type="hidden" name="Thumbnail" id="thumbnailUrl" value="@post.Thumbnail"/>
        <div class="row">
            <div class="col-md-12 text-center">
                <button type="button" class="button button-contactForm btn-block" onclick="submitUpdatePostForm()" id="submit-button" disabled>Submit</button>
            </div>
        </div>
    </form>
</div>