@model UpdatePostViewModel
@{
    Layout = "_Layout";
    var post = Model.Post;
    var categories = Model.Categories;
}

@section scripts {
    <!-- Embed serverUrl from ServerUrlTagHelper -->
    <script server-url></script>
    <script>
        
        @if (TempData["ErrorMessage"] != null)
        {
            <text>showError("@TempData["ErrorMessage"]");</text>
        }

        // Auto-generate slug from title
        document.querySelector('input[name="Title"]').addEventListener('input', function() {
            let titleValue = this.value;
            document.querySelector('input[name="Slug"]').value = createSlug(titleValue);
        });

        // Handle upload or drag files
        document.addEventListener("DOMContentLoaded", function() {
            const fileInput = document.getElementById("thumbnail");
            const dropArea = document.getElementById("drop-area");
            const fileList = document.getElementById("file-list");
            const thumbnailUrl = document.getElementById("thumbnailUrl").value;

            // Hiển thị hình ảnh đã upload khi tải trang cập nhật
            if (thumbnailUrl) {
                displayUploadedFile(thumbnailUrl);
            }

            dropArea.addEventListener("dragover", (event) => {
                event.preventDefault();
                dropArea.classList.add("drag-over");
            });

            dropArea.addEventListener("dragleave", () => {
                dropArea.classList.remove("drag-over");
            });

            dropArea.addEventListener("drop", (event) => {
                event.preventDefault();
                dropArea.classList.remove("drag-over");
                handleFiles(event.dataTransfer.files);
            });

            fileInput.addEventListener("change", () => {
                handleFiles(fileInput.files);
            });

            function handleFiles(files) {
                fileList.innerHTML = '';
                [...files].forEach(file => {
                    const fileItem = document.createElement("div");
                    fileItem.className = "file-item";

                    const fileThumbnail = document.createElement("div");
                    fileThumbnail.className = "file-thumbnail";
                    const img = document.createElement("img");
                    img.src = URL.createObjectURL(file);
                    img.alt = "Thumbnail";
                    fileThumbnail.appendChild(img);

                    const fileDetails = document.createElement("div");
                    fileDetails.className = "file-details";
                    fileDetails.innerHTML = `
                        <span class="file-name">${file.name}</span>
                        <span class="file-size">${(file.size / 1024 / 1024).toFixed(2)} MB</span>
                    `;

                    const fileRemove = document.createElement("div");
                    fileRemove.className = "file-remove";
                    const removeButton = document.createElement("button");
                    removeButton.type = "button";
                    removeButton.innerHTML = '<i class="fas fa-trash-alt"></i>';
                    removeButton.addEventListener("click", () => {
                        showConfirm(
                            'Are you sure you want to delete this image?',
                            'This action cannot be undone.',
                            'Yes, delete it',
                            'Cancel',
                            () => {
                                fileInput.value = '';
                                fileList.innerHTML = '';
                                document.getElementById('thumbnailUrl').value = ''; // Xóa URL hình ảnh khi xóa file
                            }
                        );
                    });

                    fileRemove.appendChild(removeButton);
                    fileItem.appendChild(fileThumbnail);
                    fileItem.appendChild(fileDetails);
                    fileItem.appendChild(fileRemove);
                    fileList.appendChild(fileItem);
                });

                uploadFiles(files);
            }

            function displayUploadedFile(url) {
                fileList.innerHTML = '';

                const fileItem = document.createElement("div");
                fileItem.className = "file-item";

                const fileThumbnail = document.createElement("div");
                fileThumbnail.className = "file-thumbnail";
                const img = document.createElement("img");
                img.src = `${serverUrl}/${url}`; // Sử dụng serverUrl từ biến JavaScript
                img.alt = "Thumbnail";
                fileThumbnail.appendChild(img);

                const fileDetails = document.createElement("div");
                fileDetails.className = "file-details";
                fileDetails.innerHTML = `
                    <span class="file-name">${url.split('/').pop()}</span>
                `;

                const fileRemove = document.createElement("div");
                fileRemove.className = "file-remove";
                const removeButton = document.createElement("button");
                removeButton.type = "button";
                removeButton.innerHTML = '<i class="fas fa-trash-alt"></i>';
                removeButton.addEventListener("click", () => {
                    showConfirm(
                        'Are you sure you want to delete this image?',
                        'This action cannot be undone.',
                        'Yes, delete it',
                        'Cancel',
                        () => {
                            fileInput.value = '';
                            fileList.innerHTML = '';
                            document.getElementById('thumbnailUrl').value = ''; // Xóa URL hình ảnh khi xóa file
                        }
                    );
                });

                fileRemove.appendChild(removeButton);
                fileItem.appendChild(fileThumbnail);
                fileItem.appendChild(fileDetails);
                fileItem.appendChild(fileRemove);
                fileList.appendChild(fileItem);
            }

            async function uploadFiles(files) {
                const formData = new FormData();
                formData.append('file', files[0]);
                formData.append('type', 'image');

                try {
                    const response = await fetch('/api/media/upload', {
                        method: 'POST',
                        body: formData
                    });

                    const responseBody = await response.text();
                    if (!response.ok) {
                        showError(`Upload failed with status: ${response.status}, error: ${responseBody}`);
                        return;
                    }

                    const result = JSON.parse(responseBody);
                    console.log(result);

                    // Update the hidden input with the URL of the uploaded file
                    document.getElementById('thumbnailUrl').value = result.data;
                } catch (error) {
                    showError(`Error uploading file: ${error.message}`);
                }
            }
        });
    </script>
}

<div class="container single-content">
    <div class="entry-header entry-header-style-1 mb-50 pt-50 text-center">
        <h1 class="entry-title mb-20 font-weight-900">
            Update posts
        </h1>
        <div class="breadcrumb">
            <a asp-action="ManagePosts" asp-controller="Accounts" rel="nofollow">Manage posts</a>
            <span></span> Update posts
        </div>
    </div>
    <form method="post" enctype="multipart/form-data">
        @Html.AntiForgeryToken()
        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    <select class="dropdown-custom" name="category" required="">
                        <option value="" disabled>Select category</option>
                        @foreach (var category in categories)
                        {
                            if (post.CategoryId == category.Id)
                            {
                                <option value="@category.Id" selected>@category.Name</option>
                            }
                            else
                            {
                                <option value="@category.Id">@category.Name</option>
                            }
                        }
                    </select>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    <input type="text" required class="form-control" name="Title" id="title"  placeholder="Title" value="@post.Title">
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    <input type="text" required class="form-control" name="Slug" id="slug" placeholder="Slug (SEO)" value="@post.Slug">
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                <div class="form-group">
                    <textarea class="form-control" required name="Summary" id="summary" placeholder="Summary" rows="3">@post.Summary</textarea>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                <div class="form-group">
                    <textarea class="form-control" required name="Content" id="content" placeholder="Content" rows="6">@post.Content</textarea>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                <div class="form-group">
                    <input class="form-control" name="SeoDescription" placeholder="SEO description" rows="3" value="@post.SeoDescription">
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                <div class="form-group">
                    <input type="text" class="form-control" name="Source" id="source" placeholder="Reference source (URL or source)" value="@post.Source">
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                <div class="upload-container">
                    <label for="thumbnail" class="custom-file-upload" style="width: 100%;">
                        <input type="file" id="thumbnail" name="thumbnail" required="" style="display:none;">
                        <div id="drop-area" class="drop-area">
                            <div class="drop-area-icon">
                                <i class="fas fa-cloud-upload-alt fa-2x mb-2"></i>
                            </div>
                            <div class="drop-area-text">Drag and drop file here</div>
                        </div>
                    </label>
                    <div id="file-list" class="file-list"></div>
                </div>
            </div>
        </div>
        <input type="hidden" name="Thumbnail" id="thumbnailUrl" value="@post.Thumbnail"/>
        <div class="row">
            <div class="col-md-12">
                <div class="form-group">
                    <button type="submit" class="button button-contactForm btn-block">Submit</button>
                </div>
            </div>
        </div>
    </form>
</div>