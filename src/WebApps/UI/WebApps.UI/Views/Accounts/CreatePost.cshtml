@model CreatePostViewModel
@{
    Layout = "_Layout";
    var categories = Model.Categories;
}

@section scripts {
    <script>

        @if (TempData["ErrorMessage"] != null)
        {
            <text>showError("@TempData["ErrorMessage"]");</text>
        }

        // Auto-generate slug from title
        document.querySelector('input[name="Title"]').addEventListener('input', function() {
            let titleValue = this.value;
            document.querySelector('input[name="Slug"]').value = createSlug(titleValue);
        });
        
        // Handle upload or drag files
        document.addEventListener("DOMContentLoaded", function() {
            const fileInput = document.getElementById("thumbnail");
            const dropArea = document.getElementById("drop-area");
            const fileList = document.getElementById("file-list");

            dropArea.addEventListener("dragover", (event) => {
                event.preventDefault();
                dropArea.classList.add("drag-over");
            });

            dropArea.addEventListener("dragleave", () => {
                dropArea.classList.remove("drag-over");
            });

            dropArea.addEventListener("drop", (event) => {
                event.preventDefault();
                dropArea.classList.remove("drag-over");
                handleFiles(event.dataTransfer.files);
            });

            fileInput.addEventListener("change", () => {
                handleFiles(fileInput.files);
            });

            function handleFiles(files) {
                fileList.innerHTML = '';
                [...files].forEach(file => {
                    const fileItem = document.createElement("div");
                    fileItem.className = "file-item";

                    const fileThumbnail = document.createElement("div");
                    fileThumbnail.className = "file-thumbnail";
                    const img = document.createElement("img");
                    img.src = URL.createObjectURL(file);
                    img.alt = "Thumbnail";
                    fileThumbnail.appendChild(img);

                    const fileDetails = document.createElement("div");
                    fileDetails.className = "file-details";
                    fileDetails.innerHTML = `
                        <span class="file-name">${file.name}</span>
                        <span class="file-size">${(file.size / 1024 / 1024).toFixed(2)} MB</span>
                    `;

                    const fileRemove = document.createElement("div");
                    fileRemove.className = "file-remove";
                    const removeButton = document.createElement("button");
                    removeButton.type = "button";
                    removeButton.innerHTML = '<i class="fas fa-trash-alt"></i>';
                    removeButton.addEventListener("click", () => {
                        fileInput.value = '';
                        fileList.innerHTML = '';
                    });

                    fileRemove.appendChild(removeButton);
                    fileItem.appendChild(fileThumbnail);
                    fileItem.appendChild(fileDetails);
                    fileItem.appendChild(fileRemove);
                    fileList.appendChild(fileItem);
                });

                uploadFiles(files);
            }
        });

        async function uploadFiles(files) {
            const formData = new FormData();
            formData.append('file', files[0]);
            formData.append('type', 'image');

            try {
                const response = await fetch('/api/media/upload', {
                    method: 'POST',
                    body: formData
                });

                const responseBody = await response.text();
                if (!response.ok) {
                    showError(`Upload failed with status: ${response.status}, error: ${responseBody}`);
                    return;
                }

                const result = JSON.parse(responseBody);
                console.log(result);
                
                // Update the hidden input with the URL of the uploaded file
                document.getElementById('thumbnailUrl').value = result.data;
            } catch (error) {
                showError(`Error uploading file: ${error.message}`);
            }
        }

        async function validateForm() {
            let form = document.getElementById('frm-create-post');
            let inputs = form.querySelectorAll('input[required], textarea[required], select[required]');
            let valid = true;

            for (let i = 0; i < inputs.length; i++) {
                let input = inputs[i];
                if (input.hasAttribute('required') && !input.value.trim()) { // Kiểm tra thuộc tính required
                    showError('Please fill out the ' + input.name + ' field.');
                    valid = false;
                    break; // Dừng lại sau khi tìm thấy trường không được nhập
                }
            }

            if (valid) {
                const thumbnailInput = document.getElementById('thumbnail');
                if (thumbnailInput.files.length > 0 && !document.getElementById('thumbnailUrl').value) {
                    await uploadFiles(thumbnailInput.files);
                }

                if (document.getElementById('thumbnailUrl').value) {
                    form.submit();
                } else {
                    showError('Please upload a valid thumbnail.');
                }
            }
        }
    
    
    </script>
}

<div class="container single-content">
    <div class="entry-header entry-header-style-1 mb-50 pt-50 text-center">
        <h1 class="entry-title mb-20 font-weight-900">
            New posts
        </h1>
        <div class="breadcrumb">
            <a asp-action="ManagePosts" asp-controller="Accounts" rel="nofollow">Manage posts</a>
            <span></span> New posts
        </div>
    </div>
    <div class="bt-1 border-color-1 mt-30 mb-50"></div>
    <form method="post" enctype="multipart/form-data" id="frm-create-post" novalidate asp-controller="Accounts" asp-action="CreatePost">
        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    <select class="dropdown-custom" name="CategoryId" id="category" required>
                        <option value="" disabled selected>Select category</option>
                        @foreach (var category in categories)
                        {
                            <option value="@category.Id">@category.Name</option>
                        }
                    </select>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    <input type="text" class="form-control" required name="Title" id="title" placeholder="Title">
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    <input type="text" class="form-control" required name="Slug" id="slug" placeholder="Slug (SEO)">
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                <div class="form-group">
                    <textarea class="form-control" required name="Summary" id="summary" placeholder="Summary" rows="3"></textarea>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                <div class="form-group">
                    <textarea class="form-control" required name="Content" id="content" placeholder="Content" rows="6"></textarea>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                <div class="form-group">
                    <input class="form-control" name="SeoDescription" placeholder="SEO description" rows="3">
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                <div class="form-group">
                    <input type="text" class="form-control" name="Source" id="source" placeholder="Reference source (URL or source)">
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                <div class="upload-container">
                    <label for="thumbnail" class="custom-file-upload" style="width: 100%;">
                        <input type="file" id="thumbnail" name="thumbnail" style="display:none;">
                        <div id="drop-area" class="drop-area">
                            <div class="drop-area-icon">
                                <i class="fas fa-cloud-upload-alt fa-2x mb-2"></i>
                            </div>
                            <div class="drop-area-text">Drag and drop file here</div>
                        </div>
                    </label>
                    <div id="file-list" class="file-list"></div>
                </div>
            </div>
        </div>
        <input type="hidden" name="Thumbnail" id="thumbnailUrl">
        <div class="row">
            <div class="col-md-12">
                <div class="form-group">
                    <button type="button" class="button button-contactForm btn-block" onclick="validateForm()">Submit</button>
                </div>
            </div>
        </div>
    </form>
</div>